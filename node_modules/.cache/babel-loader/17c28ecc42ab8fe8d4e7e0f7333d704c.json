{"ast":null,"code":"import _classCallCheck from \"/Users/araishinya/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/araishinya/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/araishinya/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/araishinya/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/araishinya/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/araishinya/udemy_react/seasons/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        return _this2.setState({\n          lat: pos.coords.latitude\n        });\n      }, function (err) {\n        return _this2.setState({\n          error: err.message\n        });\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (this.state.lat && !this.state.error) {\n        return React.createElement(SeasonDisplay, {\n          lat: this.state.lat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      } else if (!this.state.lat && this.state.error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"ErrorMessage: \", this.state.error);\n      } else {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"border red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.renderContent());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/araishinya/udemy_react/seasons/src/index.js"],"names":["React","Component","ReactDOM","SeasonDisplay","Spinner","App","state","lat","error","navigator","geolocation","getCurrentPosition","pos","setState","coords","latitude","err","message","renderContent","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,KAAK,EAAE;AAApB,K;;;;;;wCAEY;AAAA;;AAClBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,GAAG,EAAEK,GAAG,CAACE,MAAJ,CAAWC;AAAlB,SAAd,CAAJ;AAAA,OADL,EAEE,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEQ,GAAG,CAACC;AAAb,SAAd,CAAJ;AAAA,OAFL;AAID;;;oCAEe;AACd,UAAI,KAAKX,KAAL,CAAWC,GAAX,IAAkB,CAAC,KAAKD,KAAL,CAAWE,KAAlC,EAAyC;AACvC,eAAO,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAIK,IAAI,CAAC,KAAKD,KAAL,CAAWC,GAAZ,IAAmB,KAAKD,KAAL,CAAWE,KAAlC,EAAyC;AAC5C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAoB,KAAKF,KAAL,CAAWE,KAA/B,CAAP;AACD,OAFI,MAIA;AACH,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKU,aAAL,EADH,CADF;AAKD;;;;EA9BejB,S;;AAiClBC,QAAQ,CAACiB,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFF","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends Component {\n  state = { lat: null, error: '' };\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      pos => this.setState({ lat: pos.coords.latitude }),\n      err => this.setState({ error: err.message })\n    );\n  }\n\n  renderContent() {\n    if (this.state.lat && !this.state.error) {\n      return <SeasonDisplay lat={this.state.lat} />\n    } \n    \n    else if (!this.state.lat && this.state.error) {\n      return <div>ErrorMessage: {this.state.error}</div>;\n    } \n    \n    else {\n      return <Spinner />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"border red\">\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);"]},"metadata":{},"sourceType":"module"}